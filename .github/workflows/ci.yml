name: CI
on:
  push:
    branches:
    - main
    - initial_import
jobs:
  release:
    name: release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Action For Semantic Release
      id: semantic
      uses: cycjimmy/semantic-release-action@v3.0.0
      with:
        extra_plugins: |
          @semantic-release/changelog
          @semantic-release/git
        branch: main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Create upm branch
      run: |
        git branch -d upm &> /dev/null || echo upm branch not found
        git subtree split -P "$PKG_ROOT" -b upm
        git checkout upm
        if [[ -d "Samples" ]]; then
          git mv Samples Samples~
          rm -f Samples.meta
          git config --global user.name 'github-bot'
          git config --global user.email 'github-bot@users.noreply.github.com'
          git commit -am "fix: Samples => Samples~"
        fi
        git push -f -u origin upm
      env:
        PKG_ROOT: Packages/VisualNovelTemplate
    - name: Create upm git tag
      if: steps.semantic.outputs.new_release_published == 'true'
      run: |
        git tag $TAG upm
        git push origin --tags
      env:
        TAG: upm/v${{ steps.semantic.outputs.new_release_version }}
  dev:
    name: dev
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Action For Semantic Release
      id: semantic
      uses: cycjimmy/semantic-release-action@v3.0.0
      with:
        extra_plugins: |
          @semantic-release/changelog
          @semantic-release/git
        branch: initial_import
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Create upm branch
      run: |
        git branch -d upm_dev &> /dev/null || echo upm_dev branch not found
        git subtree split -P "$PKG_ROOT" -b upm_dev
        git checkout upm_dev
        if [[ -d "Samples" ]]; then
          git mv Samples Samples~
          rm -f Samples.meta
          git config --global user.name 'github-bot'
          git config --global user.email 'github-bot@users.noreply.github.com'
          git commit -am "fix: Samples => Samples~"
        fi
        git push -f -u origin upm_dev
      env:
        PKG_ROOT: Packages/VisualNovelTemplate
    - name: Create upm_dev git tag
      if: steps.semantic.outputs.new_release_published == 'true'
      run: |
        git tag $TAG upm_dev
        git push origin --tags
      env:
        TAG: upm_dev/v${{ steps.semantic.outputs.new_release_version }}
